diff --git a/constants/index.js b/constants/index.js
index 42d1f85..236af65 100644
--- a/constants/index.js
+++ b/constants/index.js
@@ -23,3 +23,7 @@ export const FETCH_CLAIMS_SUCCESS = 'FETCH_CLAIMS_SUCCESS'
 export const CREATE_CLAIM_REQUEST = 'CREATE_CLAIM_REQUEST'
 export const CREATE_CLAIM_FAILURE = 'CREATE_CLAIM_FAILURE'
 export const CREATE_CLAIM_SUCCESS = 'CREATE_CLAIM_SUCCESS'
+
+export const SHOW_CLAIM_REQUEST = 'SHOW_CLAIM_REQUEST'
+export const SHOW_CLAIM_FAILURE = 'SHOW_CLAIM_FAILURE'
+export const SHOW_CLAIM_SUCCESS = 'SHOW_CLAIM_SUCCESS'
diff --git a/pages/user.js b/pages/user.js
index 5c0a62f..34f8364 100644
--- a/pages/user.js
+++ b/pages/user.js
@@ -8,7 +8,7 @@ import createClaim from '../actions/createClaim'
 import transformToQRCode from '../utils/transformToQRCode'
 import Layout from '../layouts/Main'
 import SimpleForm from '../components/SimpleForm'
-
+import Link from 'next/link'
 
 const UserPage = (props) => {
 	const { claims, user, createClaim } = props
@@ -42,8 +42,10 @@ const UserPage = (props) => {
 				{claims.length !== 0 && (
 					<ul>
 						{claims.map((c) => (
-							<li key={`claim-${c.id}`}>
-							claim: {JSON.stringify(c)}
+							<li key={`claim-${c}`}>
+			                                claim: <Link href={`/claims/info/?hash_txn=${JSON.stringify(c)}`} as={`/claims/info/${c}`}>
+							<a>{c}</a>
+							</Link>
 							</li>
 						))}
 					</ul>
@@ -83,7 +85,7 @@ UserPage.getInitialProps = async (context) => {
 	return {
 		id,
 		user,
-		claims: claims.filter(e => e.id === id),
+		claims
 	}
 }
 
diff --git a/reducers/users.js b/reducers/users.js
index 59e1a80..3ddb864 100644
--- a/reducers/users.js
+++ b/reducers/users.js
@@ -19,6 +19,9 @@ import {
 	CREATE_CLAIM_REQUEST,
 	CREATE_CLAIM_FAILURE,
 	CREATE_CLAIM_SUCCESS,
+        SHOW_CLAIM_REQUEST,
+        SHOW_CLAIM_FAILURE,
+        SHOW_CLAIM_SUCCESS,
 } from '../constants'
 
 const keyPairs = (state={}, action) => {
@@ -38,6 +41,7 @@ const isLoading = (state=false, action) => {
 	case RSA_KEY_PAIRS_REQUEST:
 	case OFF_TANGLE_USERS_REQUEST:
 	case CHECK_TANGLE_USERS_REQUEST:
+	case SHOW_CLAIM_REQUEST:
 		return true
 	case OFF_TANGLE_USERS_SUCCESS:
 	case OFF_TANGLE_USERS_FAILURE:
@@ -51,6 +55,8 @@ const isLoading = (state=false, action) => {
 	case FETCH_CLAIMS_FAILURE:
 	case CREATE_CLAIM_SUCCESS:
 	case CREATE_CLAIM_FAILURE:
+	case SHOW_CLAIM_FAILURE:
+	case SHOW_CLAIM_SUCCESS:
 		return false
 	default:
 		return state
@@ -88,6 +94,7 @@ const error = (state=null, action) => {
 	case CHECK_TANGLE_USERS_FAILURE:
 	case FETCH_CLAIMS_FAILURE:
 	case CREATE_CLAIM_FAILURE:
+	case SHOW_CLAIM_FAILURE:
 		return action.error
 	default:
 		return state
@@ -98,6 +105,7 @@ const claims = (state=[], action) => {
 	switch (action.type) {
 	case CREATE_CLAIM_SUCCESS:
 	case FETCH_CLAIMS_SUCCESS:
+	case SHOW_CLAIM_SUCCESS:
 		return [].concat(state, action.response)
 	default:
 		return state
diff --git a/server.js b/server.js
index b66d156..32376ee 100644
--- a/server.js
+++ b/server.js
@@ -45,6 +45,13 @@ app.prepare()
 			return app.render(req, res, actualPage, queryParams)
 		})
 
+                server.get('/claims/info/:hash_txn', (req, res) => {
+                        const actualPage = '/claims/info'
+                        const queryParams = { hash_txn: req.params.hash_txn }
+                        return app.render(req, res, actualPage, queryParams)
+                })
+
+
 		server.get('*', (req, res) => {
 			req.url = req.url.replace(/\/$/, '')
 			return handle(req, res)
